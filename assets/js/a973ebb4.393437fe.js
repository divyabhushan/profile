(self.webpackChunkmy_portfolio=self.webpackChunkmy_portfolio||[]).push([[653],{4174:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var n=a(4034),i=a(9973),o=(a(7294),a(3905)),r=["components"],s={title:"DevOps Interview Questions and Answers - Part I - Basics",author:"Divya Bhushan",authorURL:"https://github.com/divyabhushan",authorImageURL:"https://avatars0.githubusercontent.com/u/11659160?"},l={permalink:"/profile/blog/2019/06/10/devops-interview-questions-answers",source:"@site/blog/2019-06-10-devops-interview-questions-answers.md",title:"DevOps Interview Questions and Answers - Part I - Basics",description:"DevOps is a set of practices that combines software development and IT operations. Here is a list of the top interview questions asked to bag a role in DevOps field.",date:"2019-06-10T00:00:00.000Z",formattedDate:"June 10, 2019",tags:[],readingTime:13.595,truncated:!0,nextItem:{title:"Docker Vs Virtual Machines(VMs)",permalink:"/profile/blog/2019/05/10/docker-vs-VMs"}},u=[{value:"1. What is DevOps?",id:"1-what-is-devops",children:[]},{value:"2. What are some of the tools you have used in DevOps approach?]",id:"2-what-are-some-of-the-tools-you-have-used-in-devops-approach",children:[]},{value:"3. What is Git?",id:"3-what-is-git",children:[]},{value:"4. What is a git commit object? How is it read?",id:"4-what-is-a-git-commit-object-how-is-it-read",children:[]},{value:"5. What is the difference between a git reset and a git revert.",id:"5-what-is-the-difference-between-a-git-reset-and-a-git-revert",children:[]},{value:"6. How does &#39;git rebase\u2019 work? When should you rebase your work instead of a &#39;git merge\u2019?",id:"6-how-does-git-rebase-work-when-should-you-rebase-your-work-instead-of-a-git-merge",children:[]},{value:"7. What is a Docker? Explain its role in DevOps.",id:"7-what-is-a-docker-explain-its-role-in-devops",children:[]},{value:"8. What is a Docker image? How are they shared and accessed?",id:"8-what-is-a-docker-image-how-are-they-shared-and-accessed",children:[]},{value:"9. How do you work on a container image?",id:"9-how-do-you-work-on-a-container-image",children:[]},{value:"10. What is Puppet? What is the need for it?",id:"10-what-is-puppet-what-is-the-need-for-it",children:[]},{value:"11. What does &#39;Infrastructure as code\u2019 means in terms of Puppet?",id:"11-what-does-infrastructure-as-code-means-in-terms-of-puppet",children:[]},{value:"12. What is Jenkins used for in DevOps?",id:"12-what-is-jenkins-used-for-in-devops",children:[]},{value:"13. How do you implement CI/CD using Jenkins?",id:"13-how-do-you-implement-cicd-using-jenkins",children:[]},{value:"14. Mention some post condition pipelines options that you used in Jenkinsfile?",id:"14-mention-some-post-condition-pipelines-options-that-you-used-in-jenkinsfile",children:[]}],d={toc:u};function p(e){var t=e.components,a=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"DevOps is a set of practices that combines software development and IT operations. Here is a list of the top interview questions asked to bag a role in DevOps field."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#1-what-is-devops"},"What is Devops?")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#2-what-are-some-of-the-tools-you-have-used-in-devops-approach"},"What are the tools you have used in devops?")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#3-what-is-git"},"What is Git?")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#4-what-is-a-git-commit-object-how-is-it-read"},"What is a git commit object? How is it read?")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#5-what-is-the-difference-between-a-git-reset-and-a-git-revert"},"What is the difference between a ",(0,o.kt)("inlineCode",{parentName:"a"},"git reset")," and ",(0,o.kt)("inlineCode",{parentName:"a"},"git revert"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#6-how-does-git-rebase-work-when-should-you-rebase-your-work-instead-of-a-git-merge"}))),(0,o.kt)("h2",{id:"1-what-is-devops"},"1. What is DevOps?"),(0,o.kt)("p",null,"DevOps is an approach to collaborate the development and operations teams for a better, bug-free continuous delivery and integration of the source code.",(0,o.kt)("br",{parentName:"p"}),"\n","DevOps is about automating the entire SDLC(Software Development Life Cycle) process with the implementation of CI/CD practices.\nCI/CD are the Continuous integration and continuous deployment methodologies.",(0,o.kt)("br",{parentName:"p"}),"\n","Every source code check-in will automatically build and unit test the entire code against a",(0,o.kt)("br",{parentName:"p"}),"\n","production like environment and continuously deployed to production environment after it passes its automated tests.",(0,o.kt)("br",{parentName:"p"}),"\n","That eliminates the long feedback, bug-fix, and product enhancements loops between every",(0,o.kt)("br",{parentName:"p"}),"\n","Release.\nEvery team takes the accountability of the entire product right from the requirement analysis to documentation to coding, testing in development environments, code deployment and continuous improvements in terms of bugs and feedback from reviewers and the customers."),(0,o.kt)("h2",{id:"2-what-are-some-of-the-tools-you-have-used-in-devops-approach"},"2. What are some of the tools you have used in DevOps approach?]"),(0,o.kt)("p",null,"Considering DevOps to be an ideology towards achieving a quality product, every organization has its own guidelines and approach towards it.",(0,o.kt)("br",{parentName:"p"}),"\n","Some of the popular tools I have used are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Git as a Distributed VCS to manage the source code."),(0,o.kt)("li",{parentName:"ul"},"Jenkins to achieve CI/CD (Continuous Integration and Continuous Delivery) +plugins"),(0,o.kt)("li",{parentName:"ul"},"Puppet for Configuration Management and Deployment tool"),(0,o.kt)("li",{parentName:"ul"},"Nagios for Continuous Monitoring; and"),(0,o.kt)("li",{parentName:"ul"},"Docker for containerization.")),(0,o.kt)("h2",{id:"3-what-is-git"},"3. What is Git?"),(0,o.kt)("p",null,"Git is a Distributed Version Control System; used to logically store and backup the entire history of how your project source code has developed, keeping a track of every version change of the code."),(0,o.kt)("p",null,"Git facilitates very flexible and efficient branching and merging of your code with other collaborators.Being distributed git is extremely fast and more reliable as every developer has his own local copy of the entire repository."),(0,o.kt)("p",null,"Git allows you to undo the mistakes in the source code at different tiers of its architecture namely- Working directory, Staging (Index) area, Local repository, and Remote repository."),(0,o.kt)("p",null,"Using Git we can always get an older version of our source code and work on it.Git tracks every bit of data as it checksums every file into unique hash codes referring to them via pointers."),(0,o.kt)("p",null,"To summarize Git is the most efficient and widely used VCS, used by major companies like Linux, Google, Facebook, Microsoft, Twitter, LinkedIn, Netflix, Android, Amazon, IBM, Apple IOS to name a few\u2026"),(0,o.kt)("h2",{id:"4-what-is-a-git-commit-object-how-is-it-read"},"4. What is a git commit object? How is it read?"),(0,o.kt)("p",null,"When a project repository is initialized to be a git repository, git stores all its metadata in a hidden folder \u201c.git\u201d under the project root directory.",(0,o.kt)("br",{parentName:"p"}),"\n","Git repository is a collection of ",(0,o.kt)("em",{parentName:"p"},"objects.")," "),(0,o.kt)("p",null,"Git has 4 types of objects \u2013 blobs, trees, tags, and commits."),(0,o.kt)("p",null,"Every commit creates a new ",(0,o.kt)("em",{parentName:"p"},"commit object")," with a unique SHA-1 hash_id.",(0,o.kt)("br",{parentName:"p"}),"\n","Each commit object has a pointer reference to the tree object, its parent object, author, committer and the commit message.",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://d2o2utebsixu4k.cloudfront.net/media/images/1552023479018-DevOps--set2-.jpg",alt:"DevOps"})),(0,o.kt)("p",null,"Diagram: Single Commit object"),(0,o.kt)("p",null,"To see the commit log message along with the textual diff of the code, run:  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git show <commit_id>\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Divya1@Divya:initialRepo [master] $git show f9354cb\ncommit f9354cb08d91e80cabafd5b54d466b6055eb2927\nAuthor: divya bhushan <divya_bhushan@hotmail.com>\nDate:   Mon Feb 11 23:39:24 2019 +0100\n    Add database logs.\ndiff --git a/logs/db.log b/logs/db.log\nnew file mode 100644\nindex 0000000..f8854b0\n--- /dev/null\n+++ b/logs/db.log\n@@ -0,0 +1 @@\n+database logs\n")),(0,o.kt)("p",null,"To read a commit object git has 'git cat-file\u2019 utility.  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Divya1@Divya:initialRepo [master] $git cat-file -p f9354cb\ntree 2a85825b8d20918350cc316513edd9cc289f8349\nparent 30760c59d661e129329acfba7e20c899d0d7d199\nauthor divya bhushan <divya_bhushan@hotmail.com> 1549924764 +0100\ncommitter divya bhushan <divya_bhushan@hotmail.com> 1549924764 +0100 \nAdd database logs.\n")),(0,o.kt)("p",null,"A tree object is like an OS directory that stores references to other directories and files (blob type).  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Divya1@Divya:initialRepo [master] $git cat-file -p 2a85825b8d20918350cc316513edd9cc289f8349\n100755 blob 054acd444517ad5a0c1e46d8eff925e061edf46c README.md\n040000 tree dfe42cbaf87e6a56b51dab97fc51ecedfc969f39 code\n100644 blob e08d4579f39808f3e2830b5da8ac155f87c0621c dockerfile\n040000 tree 014e65a65532dc16a6d50e0d153c222a12df4742   logs\n")),(0,o.kt)("h2",{id:"5-what-is-the-difference-between-a-git-reset-and-a-git-revert"},"5. What is the difference between a git reset and a git revert."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"git revert is used to record some new commits to reverse the effect of some earlier commits/snapshot of a project."),(0,o.kt)("li",{parentName:"ul"},"Instead of removing the commit from the project history, it figures out how to undo the changes introduced by the commit & appends a new commit with the resulting content in the current branch.")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://d2o2utebsixu4k.cloudfront.net/media/images/1552024197659-What-is-the-difference-between-a-git-reset-and-a-git-revert.jpg",alt:"difference-between-a-git-reset-and-a-git"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Usage:")," git revert <commit_id>"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Use:")," To undo an entire commit from your project history; removing a bug introduced by a commit.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Reset Vs Revert")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"git \u201creset\u201d: resets the project to a previous snapshot erasing the changes."),(0,o.kt)("li",{parentName:"ul"},"git \u201crevert\u201d does not change the project history unlike git \u201creset\u201d"),(0,o.kt)("li",{parentName:"ul"},"Git \u201crevert\u201d undoes the commit id changes and applies the undo work as a new commit id object.")),(0,o.kt)("h2",{id:"6-how-does-git-rebase-work-when-should-you-rebase-your-work-instead-of-a-git-merge"},"6. How does 'git rebase\u2019 work? When should you rebase your work instead of a 'git merge\u2019?"),(0,o.kt)("p",null,"There are scenarios wherein one would like to merge a quickfix or feature branch with not a huge commit history into another 'dev\u2019 or 'uat\u2019 branch and yet maintain a linear history."),(0,o.kt)("p",null,"A non-fast forward 'git merge\u2019 would result in a diverged history. Also when one wants the feature merged commits to be the latest commits; 'git rebase\u2019 is an appropriate way of merging the two branches."),(0,o.kt)("p",null,"'git rebase\u2019 replays the commits on the current branch and place them over the tip of the rebased branch.Since it replays the commit ids, rebase rewrites commit objects and create a new object id(SHA-1). Word of caution: Do not use it if the history is on release/production branch and being shared on the central server. Limit the rebase on your local repository only to rebase quickfix or feature branches."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Steps:")),(0,o.kt)("p",null,"Say there is a 'dev\u2019 branch that needs a quick feature to be added along with the test cases from 'uat\u2019 branch."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Step 1:")," Branch out 'new-feature\u2019 branch from 'dev\u2019.")),(0,o.kt)("p",null,"Develop the new feature and make commits in 'new-feature\u2019 branch."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"[dev ] $git checkout -b new-feature\n[new-feature ] $ git add lib/commonLibrary.sh && git commit -m \u201cAdd commonLibrary file\u201d\nDivya1@Divya:rebase_project [new-feature] $git add lib/commonLibrary.sh && git commit -m 'Add commonLibrary file'Divya1@Divya:rebase_project [new-feature] $git add feature1.txt && git commit -m 'Add feature1.txt'\nDivya1@Divya:rebase_project [new-feature] $git add feature2.txt && git commit -m 'Add feature2.txt'\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Step 2:")," Merge 'uat\u2019 branch into 'dev\u2019")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"[dev] $ git merge uat\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Step 3:")," Rebase 'new-feature\u2019 on 'dev\u2019")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Divya1@Divya:rebase_project [dev] $git checkout new-featureDivya1@Divya:rebase_project [new-feature] $git rebase dev\nFirst, rewinding head to replay your work on top of it...\nApplying: Add commonLibrary file\nApplying: Add feature1.txt\nApplying: Add feature2.txt\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Step 4:")," Switch to 'dev\u2019 branch and merge 'new-feature\u2019 branch, this is going to be a fast-forward merge as 'new-feature\u2019 has already incorporated 'dev\u2019+\u2019uat\u2019 commits.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Divya1@Divya:rebase_project [new-feature] $git checkout dev\nDivya1@Divya:rebase_project [dev] $git merge new-feature\nUpdating 5044e24..3378815\nFast-forward\nfeature1.txt         | 1 +\nfeature2.txt         | 1 +\nlib/commonLibrary.sh | 16 ++++++++++++++++\n3 files changed, 18 insertions(+)\ncreate mode 100644 feature1.txt\ncreate mode 100644 feature2.txt\ncreate mode 100644 lib/commonLibrary.sh\n")),(0,o.kt)("p",null,"this will result in linear history with 'new-feature\u2019 results being at the top and 'dev\u2019 commits being pushed later."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Step 5:")," View the history of 'dev\u2019 after merging 'uat\u2019 and 'new-feature\u2019 (rebase)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Divya1@Divya:rebase_project [dev] $git hist\n* 3378815 2019-02-14 | Add feature2.txt (HEAD -> dev, new-feature) [divya bhushan]\n* d3859c5 2019-02-14 | Add feature1.txt [divya bhushan]\n* 93b76f7 2019-02-14 | Add commonLibrary file [divya bhushan]\n*   5044e24 2019-02-14 | Merge branch 'uat' into dev [divya bhushan]\n|  \n| * bb13fb0 2019-02-14 | End of uat work. (uat) [divya bhushan]\n| * 0ab2061 2019-02-14 | Start of uat work. [divya bhushan]\n* | a96deb1 2019-02-14 | End of dev work. [divya bhushan]\n* | 817544e 2019-02-14 | Start of dev work. [divya bhushan]\n|/  \n* 01ad76b 2019-02-14 | Initial project structure. (tag: v1.0, master) [divya bhushan]\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"NOTE: 'dev\u2019 will show a diverged commit history for 'uat\u2019 merge and a linear history for 'new-feature\u2019 merge."))),(0,o.kt)("h2",{id:"7-what-is-a-docker-explain-its-role-in-devops"},"7. What is a Docker? Explain its role in DevOps."),(0,o.kt)("p",null,"Every source code deployment needs to be portable and compatible on every device and environment."),(0,o.kt)("p",null,"Applications and their run time environment such as libraries and other dependencies like binaries, jar files, configuration files etc.. are bundled up(packaged) in a ",(0,o.kt)("strong",{parentName:"p"},"Container"),"."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Containers")," as a whole are portable, consistent and compatible with any environment."),(0,o.kt)("p",null,"In development words, a developer can run its application in any environment: dev, uat, preprod and production without worrying about the run-time dependencies of the application."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Docker is a container platform."),(0,o.kt)("li",{parentName:"ul"},"Docker is a framework that provides an abstraction layer to manage containers."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Docker")," is a containerization engine, which automates packaging, shipping, and deployment of any software applications or ",(0,o.kt)("em",{parentName:"li"},"Containers.")),(0,o.kt)("li",{parentName:"ul"},"Docker also lets us test the code and then deploy it in production."),(0,o.kt)("li",{parentName:"ul"},"Docker along with Jenkins (a Continuous Integration tool) and Git plugin contributes in CI/CD process.")),(0,o.kt)("h2",{id:"8-what-is-a-docker-image-how-are-they-shared-and-accessed"},"8. What is a Docker image? How are they shared and accessed?"),(0,o.kt)("p",null,"A developer writes code instructions to define all the applications and its dependencies in a file called a \u201cDockerfile\u201d.Dockerfile is used to create a 'Docker image' using the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker build <directory>")," command.The build command is run by the docker daemon.  "),(0,o.kt)("p",null,"When you run a Docker image \u201cContainers\u201d are created. Containers are runtime instances of a Docker image."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A Container can have many images."),(0,o.kt)("li",{parentName:"ul"},"Docker containers are stored in a docker registry on docker host."),(0,o.kt)("li",{parentName:"ul"},"Docker has a client-Server architecture."),(0,o.kt)("li",{parentName:"ul"},"Docker registry is generally pushed and shared on a Docker hub (Remote server).")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://d2o2utebsixu4k.cloudfront.net/media/images/1552025560274-What-is-a-Docker-image-How-are-they-shared-and-accessed.jpg",alt:"Docker-image-How-are-they-shared-and-accessed"})),(0,o.kt)("p",null,"Image credit: ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/docker-overview/"},"docs.docker.com")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Other developers 'Docker pull\u2019 these registry images and create containers in their own environment."),(0,o.kt)("li",{parentName:"ul"},"Developers can run their applications in the same docker container as their peers."),(0,o.kt)("li",{parentName:"ul"},"This way you can get the same test environment on different servers with the same applications and dependencies.")),(0,o.kt)("h2",{id:"9-how-do-you-work-on-a-container-image"},"9. How do you work on a container image?"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"--Get docker images from docker hub or your docker repository\n\ndocker pull busybox\ndocker pull centos\ndocker pull divyabhushan/myrepo\nDivya1@Divya:~ $docker pull divyabhushan/myrepo\nUsing default tag: latest\nlatest: Pulling from divyabhushan/myrepo\n6cf436f81810: Pull complete\n987088a85b96: Pull complete\nb4624b3efe06: Pull complete\nd42beb8ded59: Pull complete\nd08b19d33455: Pull complete\n80d9a1d33f81: Pull complete\nDigest: sha256:c82b4b701af5301cc5d698d963eeed46739e67aff69fd1a5f4ef0aecc4bf7bbf\nStatus: Downloaded newer image for divyabhushan/myrepo:latest\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"--List the docker images\n\nDivya1@Divya:~ $docker images\nREPOSITORY            TAG IMAGE ID            CREATED SIZE\ndivyabhushan/myrepo   latest 72a21c221add        About an hour ago 88.1MB\nbusybox               latest 3a093384ac30        5 weeks ago 1.2MB\ncentos                latest 1e1148e4cc2c        2 months ago 202MB\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"--Create a docker container by running the docker image\n\n--pass a shell argument  : uname -a\n\nDivya1@Divya:~ $docker run centos uname -a\nLinux c70fc2da749a 4.9.125-linuxkit #1 SMP Fri Sep 7 08:20:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n")),(0,o.kt)("p",null,"--Docker images can be built by reading a dockerfile",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://d2o2utebsixu4k.cloudfront.net/media/images/1552025878271-DevOps--set2--1.jpg",alt:"dockerfile"})),(0,o.kt)("p",null,"--build a new image : 'newrepo\u2019 with tag:1.0 from the dockerFiles/dockerfile"),(0,o.kt)("p",null,"docker build -t newrepo:1.1 dockerFiles/"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://d2o2utebsixu4k.cloudfront.net/media/images/1552025892215-DevOps--set2--2.jpg",alt:"dockerfile"})),(0,o.kt)("p",null,"-- Now create a container from the above image:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://d2o2utebsixu4k.cloudfront.net/media/images/1552025914827-DevOps--set2--3.jpg",alt:"dockerfile"})),(0,o.kt)("p",null,"-- List all the containers"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://d2o2utebsixu4k.cloudfront.net/media/images/1552025930794-DevOps--set2--4.jpg",alt:"dockerfile"})),(0,o.kt)("p",null,"-- start the container"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://d2o2utebsixu4k.cloudfront.net/media/images/1552025951229-DevOps--set2--5.jpg",alt:"dockerfile"})),(0,o.kt)("p",null,"--List only the running containers"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://d2o2utebsixu4k.cloudfront.net/media/images/1552025971609-DevOps--set2--6.jpg",alt:"dockerfile"})),(0,o.kt)("h2",{id:"10-what-is-puppet-what-is-the-need-for-it"},"10. What is Puppet? What is the need for it?"),(0,o.kt)("p",null,"Puppet is a Configuration Management and deployment tool for administrative tasks.\nThis tool helps in automating the provisioning, configuration, and management of Infrastructure and Systems."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Puppet helps administrators to automate the process of manually creating and configuring Virtual machines."),(0,o.kt)("li",{parentName:"ul"},"Say, you have to bring up 'n\u2019 number of Servers with 'x\u2019 number of VMs(Virtual machines) on them. Each VM needs to be configured for certain users, groups, services, applications, and databases etc."),(0,o.kt)("li",{parentName:"ul"},"The entire infrastructure can be loaded up with the help of Puppet programs re-using the codes on multiple servers."),(0,o.kt)("li",{parentName:"ul"},"Key feature: Idempotency"),(0,o.kt)("li",{parentName:"ul"},"The same set of configurations can be run multiple times to build a machine on a server, as puppet would allow only unique configurations to be run.")),(0,o.kt)("h2",{id:"11-what-does-infrastructure-as-code-means-in-terms-of-puppet"},"11. What does 'Infrastructure as code\u2019 means in terms of Puppet?"),(0,o.kt)("p",null,"Entire Server Infrastructure setup configurations are written in terms of codes and re-used on all the Puppet Server agent\u2019s nodes(machines) that are connected via a Puppet master Server.\nThis is achieved by the use of code snippets called 'manifests\u2019; that are configuration files for every Server agent node."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Each manifest (program files with *.pp extension) consists of the resources and the codes."),(0,o.kt)("li",{parentName:"ul"},"We can review, deploy and test the environment configuration for development, testing and production environments."),(0,o.kt)("li",{parentName:"ul"},"Puppet manifests written once are deployed on any environment to build up the same infrastructure.")),(0,o.kt)("h2",{id:"12-what-is-jenkins-used-for-in-devops"},"12. What is Jenkins used for in DevOps?"),(0,o.kt)("p",null,"Jenkins is a self-contained, open source automation server(tool) for continuous development.\nJenkins aids and automates CI/CD process."),(0,o.kt)("p",null,"It gets the checked in code from VCS like Git using a 'git plugin\u2019, build the source code, run test cases in a production-like environment and make the code release ready using 'deploy\u2019 plugin."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"These continuous ",(0,o.kt)("em",{parentName:"li"},"delivery pipeline_s are written in a '_Jenkinsfile\u2019")," which is also checked into project\u2019s source code and version controlled by Git."),(0,o.kt)("li",{parentName:"ul"},"Pipelines are a continuous set of jobs that are run for continuous delivery and these jobs are integrated at every section of the workflow."),(0,o.kt)("li",{parentName:"ul"},"Jenkins pipelines easily connect to Docker images and containers to run inside."),(0,o.kt)("li",{parentName:"ul"},"Pipelines easily provide the desired test environment without having to configure the various system tools and dependencies.")),(0,o.kt)("p",null,"Sample Jenkins file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},"pipeline {\n   agent { docker { image 'ubuntu:latest' } }\n   stages {\n       stage('build') {\n           steps {\n               sh 'uname -a'\n           }\n       }\n   }\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Jenkins will start the container- ubuntu with the latest image and execute the test case steps inside it."),(0,o.kt)("li",{parentName:"ul"},"agent directive says where and how to execute the pipeline"),(0,o.kt)("li",{parentName:"ul"},"jenkinsfile (declarative pipeline)"),(0,o.kt)("li",{parentName:"ul"},"pipeline"),(0,o.kt)("li",{parentName:"ul"},"Jenkins saves us the trouble of debugging after a huge commit history if there was a code break.")),(0,o.kt)("h2",{id:"13-how-do-you-implement-cicd-using-jenkins"},"13. How do you implement CI/CD using Jenkins?"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Continuous Integration using Jenkins and Git plugin"),(0,o.kt)("li",{parentName:"ul"},"Create a new Jenkins item as a 'Pipeline\u2019."),(0,o.kt)("li",{parentName:"ul"},"Add 'Git\u2019 as branch source and give the Project repository url."),(0,o.kt)("li",{parentName:"ul"},"Every time source code is pushed to the remote git repository from the local git repo;"),(0,o.kt)("li",{parentName:"ul"},"Jenkins job gets started(triggered)."),(0,o.kt)("li",{parentName:"ul"},"Jenkins build the code and the output is available under \u201cconsole output\u201d"),(0,o.kt)("li",{parentName:"ul"},"In the git repository add a 'jenkinsfile\u2019 commit and push the code to git repository."),(0,o.kt)("li",{parentName:"ul"},"Add a Jenkinsfile in the git repository")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},"pipeline {\n   agent { docker { image 'ubuntu:latest' } }\n   stages {\n       stage('build') {\n           steps {\n               sh 'uname -a'\n           }\n       }\nstage('Test') {\n           steps {\n               sh './jenkins/scripts/test.sh'\n           }\n       }\n   }\n}\n")),(0,o.kt)("h2",{id:"14-mention-some-post-condition-pipelines-options-that-you-used-in-jenkinsfile"},"14. Mention some post condition pipelines options that you used in Jenkinsfile?"),(0,o.kt)("p",null,"We can mention some test conditions to run post the completion of stages in a pipeline."),(0,o.kt)("p",null,"Code snippet"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},"post {\nalways {\necho \u201cThis block runs always !!!\u201d\n}\nsuccess {\necho \u201cThis block runs when the stages has a success status\u201d\n}\nunstable {\necho \u201cThis block is run when the stages abort with an unstable status\u201d\n}\n}\n")),(0,o.kt)("p",null,"Here are the post conditions reserved for jenkinsfile:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"always:"))),(0,o.kt)("p",null,"Run the steps in the post section regardless of the completion status of the Pipeline\u2019s or stage\u2019s run."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"unstable:"))),(0,o.kt)("p",null,'Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has an "unstable" status, usually caused by test failures, code violations, etc.'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"aborted:"))),(0,o.kt)("p",null,"Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has an \u201caborted\u201d status."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"success:"))),(0,o.kt)("p",null,'Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has a "success" status.'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"failure:"))),(0,o.kt)("p",null,'Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has a "failed" status.'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"changed:"))),(0,o.kt)("p",null,"Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has a different completion status from its previous run."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"cleanup:"))),(0,o.kt)("p",null,"Run the steps in this post condition after every other post condition has been evaluated, regardless of the Pipeline or stage\u2019s status."))}p.isMDXComponent=!0}}]);